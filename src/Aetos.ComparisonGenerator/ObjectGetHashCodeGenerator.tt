<#@ template language="C#" linePragmas="false" visibility="internal" inherits="GeneratorBase" #>
<#
    base.TransformText();
#>
<#+
    protected override void WriteCode()
    {
        var sourceTypeInfo = this.SourceTypeInfo;
        var type = sourceTypeInfo.TypeSymbol;

        string typeName = type.Name;
        string typeKind = GetTypeKind(type);
#>
partial <#= typeKind #> <#= typeName #>
{
    public override int GetHashCode()
    {
        var hash = new HashCode();

<#+
        foreach (var member in sourceTypeInfo.Members)
        {
#>
        hash.Add(this.<#= member.Name #>);
<#+
        }
#>

        return hash.ToHashCode();
    }
}
<#+
    }
#>
