<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>9.0</LangVersion>
    <Nullable>enable</Nullable>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisLevel>5.0</AnalysisLevel>
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>embedded</DebugType>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Description>C# source generator for generating IComparable&lt;T&gt; and IEquatable&lt;T&gt; implementations, comparison operator implementations, etc.</Description>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <Version>0.1.0-alpha4</Version>
    <Authors>aetos</Authors>
    <Copyright>Copyright (c) 2021 aetos</Copyright>
    <PackageProjectUrl>https://github.com/aetos382/ComparisonGenerator</PackageProjectUrl>
    <RepositoryUrl>https://github.com/aetos382/ComparisonGenerator.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <DevelopmentDependency>true</DevelopmentDependency>
    <NoWarn>$(NoWarn);NU5128</NoWarn>
    <PackageTags>SourceGenerator</PackageTags>
    <DefaultItemExcludes>$(DefaultItemExcludes);*.log;*.binlog</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.2" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.9.0" PrivateAssets="all" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="build\Aetos.ComparisonGenerator.props" PackagePath="build" />
  </ItemGroup>

  <ItemGroup>
    <None Update="GeneratorBase.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>GeneratorBase.cs</LastGenOutput>
    </None>
    <None Update="CommonGenerator.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>CommonGenerator.cs</LastGenOutput>
    </None>
    <None Update="ObjectEqualsGenerator.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>ObjectEqualsGenerator.cs</LastGenOutput>
    </None>
    <None Update="EquatableGenerator.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>EquatableGenerator.cs</LastGenOutput>
    </None>
    <None Update="GenericComparableGenerator.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>GenericComparableGenerator.cs</LastGenOutput>
    </None>
    <None Update="NonGenericComparableGenerator.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>NonGenericComparableGenerator.cs</LastGenOutput>
    </None>
    <None Update="EquatableOperatorsGenerator.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>EquatableOperatorsGenerator.cs</LastGenOutput>
    </None>
    <None Update="ComparisonOperatorsGenerator.tt">
      <Generator>TextTemplatingFilePreprocessor</Generator>
      <LastGenOutput>ComparisonOperatorsGenerator.cs</LastGenOutput>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Compile Update="GeneratorBase.cs">
      <DependentUpon>GeneratorBase.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="CommonGenerator.cs">
      <DependentUpon>CommonGenerator.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="ObjectEqualsGenerator.cs">
      <DependentUpon>ObjectEqualsGenerator.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="EquatableGenerator.cs">
      <DependentUpon>EquatableGenerator.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="GenericComparableGenerator.cs">
      <DependentUpon>GenericComparableGenerator.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="NonGenericComparableGenerator.cs">
      <DependentUpon>NonGenericComparableGenerator.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="EquatableOperatorsGenerator.cs">
      <DependentUpon>EquatableOperatorsGenerator.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="ComparisonOperatorsGenerator.cs">
      <DependentUpon>ComparisonOperatorsGenerator.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
  </ItemGroup>

  <PropertyGroup>
    <BeforePack>
      _PrepareForPack;
      $(BeforePack)
    </BeforePack>
  </PropertyGroup>

  <Target Name="_PrepareForPack">
    <PropertyGroup>
      <!-- Do not include the generator as a lib dependency -->
      <IncludeBuildOutput>false</IncludeBuildOutput>
    </PropertyGroup>

    <ItemGroup>
      <!-- Package the generator in the analyzer directory of the nuget package -->
      <None Include="$(TargetPath)" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>
  </Target>

</Project>
